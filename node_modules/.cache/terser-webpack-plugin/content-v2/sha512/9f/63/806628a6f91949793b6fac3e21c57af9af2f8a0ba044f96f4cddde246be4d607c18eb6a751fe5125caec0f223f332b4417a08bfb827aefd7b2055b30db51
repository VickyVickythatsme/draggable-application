{"map":"{\"version\":3,\"sources\":[\"C:/Users/25359/sp/react-dnd-task/src/data/board-initial-data.ts\",\"C:/Users/25359/sp/react-dnd-task/src/components/AddTask.tsx\",\"C:/Users/25359/sp/react-dnd-task/src/components/board-item.tsx\",\"C:/Users/25359/sp/react-dnd-task/src/components/board-column.tsx\",\"C:/Users/25359/sp/react-dnd-task/src/components/board.tsx\",\"C:/Users/25359/sp/react-dnd-task/src/index.tsx\"],\"names\":[\"initialBoardData\",\"items\",\"item-1\",\"id\",\"content\",\"item-2\",\"item-3\",\"item-4\",\"item-5\",\"item-6\",\"item-7\",\"columns\",\"column-1\",\"title\",\"itemsIds\",\"column-2\",\"column-3\",\"column-4\",\"columnsOrder\",\"MessageWrapper\",\"styled\",\"div\",\"_templateObject\",\"Object\",\"taggedTemplateLiteral\",\"AddInput\",\"input\",\"_templateObject2\",\"AddTask\",\"prop\",\"_useState\",\"useState\",\"_useState2\",\"slicedToArray\",\"setContent\",\"react_default\",\"a\",\"createElement\",\"style\",\"margin\",\"value\",\"placeholder\",\"onChange\",\"event\",\"target\",\"onKeyUp\",\"onkeyup\",\"BoardItemEl\",\"board_item_templateObject\",\"props\",\"isDragging\",\"EditInput\",\"board_item_templateObject2\",\"BoardItem\",\"item\",\"react_beautiful_dnd_esm\",\"draggableId\",\"index\",\"provided\",\"snapshot\",\"assign\",\"draggableProps\",\"dragHandleProps\",\"ref\",\"innerRef\",\"onkey\",\"BoardColumnWrapper\",\"board_column_templateObject\",\"AddButton\",\"button\",\"board_column_templateObject2\",\"BoardColumnTitle\",\"_templateObject3\",\"BoardColumnContent\",\"_templateObject4\",\"BoardColumn\",\"_React$useState\",\"React\",\"_React$useState2\",\"open\",\"setOpen\",\"handleOpen\",\"handleClose\",\"react\",\"column\",\"provided1\",\"snapshot1\",\"backgroundColor\",\"bgColor\",\"onClick\",\"Modal\",\"onClose\",\"AddonKey\",\"droppableId\",\"direction\",\"isDropDisabled\",\"droppable\",\"droppableProps\",\"isDraggingOver\",\"map\",\"board_item_BoardItem\",\"key\",\"BoardEl\",\"board_templateObject\",\"IntroWrapper\",\"board_templateObject2\",\"Board\",\"_React$Component\",\"inherits\",\"_super\",\"createSuper\",\"_this\",\"classCallCheck\",\"this\",\"_len\",\"arguments\",\"length\",\"args\",\"Array\",\"_key\",\"call\",\"apply\",\"concat\",\"state\",\"data\",\"ColumnDroppable\",\"itemDroppable\",\"editContent\",\"itemId\",\"itemContent\",\"newState\",\"objectSpread2\",\"defineProperty\",\"setState\",\"blur\",\"addNewTask\",\"keys\",\"colName\",\"document\",\"getElementById\",\"undefined\",\"innerHTML\",\"columnId\",\"innerText\",\"columnAdd\",\"newItemsIds\",\"from\",\"push\",\"newColumnAdd\",\"onDragStart\",\"result\",\"includes\",\"onDragEnd\",\"source\",\"destination\",\"newcolumnsOrder\",\"temp\",\"tmp\",\"columnStart\",\"columnFinish\",\"splice\",\"newColumnStart\",\"_objectSpread6\",\"newStartItemsIds\",\"newFinishItemsIds\",\"newColumnFinish\",\"createClass\",\"_this2\",\"board_column_BoardColumn\",\"GlobalStyle\",\"createGlobalStyle\",\"src_templateObject\",\"Page\",\"board_Board\",\"ReactDOM\",\"src_Page\"],\"mappings\":\"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\",\"sourcesContent\":[\"export const initialBoardData = {\\r\\n    items: {\\r\\n      'item-1': { id: 'item-1', content: 'Content of item 1.'},\\r\\n      'item-2': { id: 'item-2', content: 'Content of item 2.'},\\r\\n      'item-3': { id: 'item-3', content: 'Content of item 3.'},\\r\\n      'item-4': { id: 'item-4', content: 'Content of item 4.'},\\r\\n      'item-5': { id: 'item-5', content: 'Content of item 5.'},\\r\\n      'item-6': { id: 'item-6', content: 'Content of item 6.'},\\r\\n      'item-7': { id: 'item-7', content: 'Content of item 7.'}\\r\\n    },\\r\\n    columns: {\\r\\n      'column-1': {\\r\\n        id: 'column-1',\\r\\n        title: 'Column 1',\\r\\n        itemsIds: ['item-1', 'item-2', 'item-3', 'item-4', 'item-5', 'item-6', 'item-7']\\r\\n      },\\r\\n      'column-2': {\\r\\n        id: 'column-2',\\r\\n        title: 'Column 2',\\r\\n        itemsIds: []\\r\\n      },\\r\\n      'column-3': {\\r\\n        id: 'column-3',\\r\\n        title: 'Column 3',\\r\\n        itemsIds: []\\r\\n      },\\r\\n      'column-4': {\\r\\n        id: 'column-4',\\r\\n        title: 'Column 4',\\r\\n        itemsIds: []\\r\\n      }\\r\\n    },\\r\\n    columnsOrder: ['column-1', 'column-2', 'column-3', 'column-4']\\r\\n  }\",\"import React, { useState } from \\\"react\\\";\\r\\nimport styled from \\\"styled-components\\\";\\r\\n\\r\\ninterface AddTaskProps {\\r\\n  onkeyup: (event: React.KeyboardEvent<HTMLInputElement>) => void;\\r\\n  title: string;\\r\\n}\\r\\n\\r\\nconst MessageWrapper = styled.div`\\r\\n  position: absolute;\\r\\n  top: 40%;\\r\\n  left: 40%;\\r\\n  background-color: #fff;\\r\\n  width: 20%;\\r\\n`;\\r\\nconst AddInput = styled.input`\\r\\n  height: 30px;\\r\\n  fontsize: 16px;\\r\\n`;\\r\\n\\r\\nexport default function AddTask(prop: AddTaskProps) {\\r\\n  const [content, setContent] = useState(\\\"\\\");\\r\\n  return (\\r\\n    <MessageWrapper>\\r\\n      <div style={{ margin: \\\"10%\\\" }}>\\r\\n        <h2 id=\\\"add-content\\\"> {prop.title} </h2>\\r\\n        <AddInput\\r\\n          id=\\\"add-content\\\"\\r\\n          value={content}\\r\\n          placeholder=\\\"Add Content Here\\\"\\r\\n          onChange={(event) => {\\r\\n            setContent(event.target.value);\\r\\n          }}\\r\\n          onKeyUp={prop.onkeyup}\\r\\n        />\\r\\n      </div>\\r\\n    </MessageWrapper>\\r\\n  );\\r\\n}\\r\\n\",\"import React, {useState} from \\\"react\\\";\\r\\nimport { Draggable } from \\\"react-beautiful-dnd\\\";\\r\\nimport styled from \\\"styled-components\\\";\\r\\n\\r\\n\\r\\n// Define types for board item element properties\\r\\ntype BoardItemProps = {\\r\\n  index: number;\\r\\n  item: any;\\r\\n  onkey: (event:React.KeyboardEvent<HTMLInputElement>)=>void;\\r\\n};\\r\\n\\r\\n// Define types for board item element style properties\\r\\n// This is necessary for TypeScript to accept the 'isDragging' prop.\\r\\ntype BoardItemStylesProps = {\\r\\n  isDragging: boolean;\\r\\n};\\r\\n\\r\\n// Create style for board item element\\r\\nconst BoardItemEl = styled.div<BoardItemStylesProps>`\\r\\n  padding: 8px;\\r\\n  margin-top:10px;\\r\\n  margin-bottom:15px;\\r\\n  background-color:  ${(props) => props.isDragging ? 'rgba(0,0,0,0.8)' : 'rgba(0,0,0,0.4)'};r\\r\\n  border-radius: 4px;\\r\\n  transition: background-color 0.25s ease-out;\\r\\n\\r\\n  & + & {\\r\\n    margin-top: 4px;\\r\\n  }\\r\\n`;\\r\\n\\r\\nconst EditInput = styled.input`\\r\\n  border:none;\\r\\n  background-color:transparent;\\r\\n  color: #fff;\\r\\n  height:30px;\\r\\n  font-size:14px;\\r\\n  fontWeight:bold;\\r\\n  width:50%;\\r\\n\\r\\n`;\\r\\n\\r\\n// Create and export the BoardItem component\\r\\nexport const BoardItem = (props: BoardItemProps) => {\\r\\n  const[content, setContent] = useState(props.item.content);\\r\\n  return (\\r\\n    <Draggable draggableId={props.item.id} index={props.index}>\\r\\n      {(provided, snapshot) => (\\r\\n        <BoardItemEl\\r\\n          {...provided.draggableProps}\\r\\n          {...provided.dragHandleProps}\\r\\n          ref={provided.innerRef}\\r\\n          isDragging={snapshot.isDragging}\\r\\n        >\\r\\n          <EditInput\\r\\n            id = {props.item.id}\\r\\n            value={content}\\r\\n            onChange={(event) => {\\r\\n              setContent(event.target.value);\\r\\n            }}\\r\\n            onKeyUp={props.onkey}\\r\\n           \\r\\n          />\\r\\n        </BoardItemEl>\\r\\n      )}\\r\\n    </Draggable>\\r\\n  );\\r\\n};\\r\\n\",\"import * as React from \\\"react\\\";\\r\\nimport { Draggable, Droppable } from \\\"react-beautiful-dnd\\\";\\r\\nimport styled from \\\"styled-components\\\";\\r\\nimport Modal from \\\"@material-ui/core/Modal\\\";\\r\\nimport AddTask from \\\"./AddTask\\\";\\r\\n\\r\\n// Import BoardItem component\\r\\nimport { BoardItem } from \\\"./board-item\\\";\\r\\n\\r\\n// Define types for board column element properties\\r\\ntype BoardColumnProps = {\\r\\n  index: number;\\r\\n  key: string;\\r\\n  column: any;\\r\\n  items: any;\\r\\n  droppable: boolean;\\r\\n  onkey: (event: React.KeyboardEvent<HTMLInputElement>) => void;\\r\\n  AddonKey:(event: React.KeyboardEvent<HTMLInputElement>,) => void;\\r\\n  bgColor: string;\\r\\n};\\r\\n\\r\\n// Define types for board column content style properties\\r\\n// This is necessary for TypeScript to accept the 'isDraggingOver' prop.\\r\\ntype BoardColumnContentStylesProps = {\\r\\n  isDraggingOver?: boolean;\\r\\n  isDragging?: boolean;\\r\\n};\\r\\n\\r\\n// Create styles for BoardColumnWrapper element\\r\\nconst BoardColumnWrapper = styled.div<BoardColumnContentStylesProps>`\\r\\n  flex: 1;\\r\\n  background-color: rgba(0, 0, 0, 0.2);\\r\\n  & + & {\\r\\n    margin-left: 20px;\\r\\n  }\\r\\n`;\\r\\nconst AddButton = styled.button`\\r\\n  outline:none;\\r\\n  border: none;\\r\\n  background-color: transparent;\\r\\n  font-size: 30px;\\r\\n  cursor: pointer;\\r\\n  &:hover{\\r\\n    border: null;\\r\\n    color:white;\\r\\n  }\\r\\n`;\\r\\n// Create styles for BoardColumnTitle element\\r\\nconst BoardColumnTitle = styled.div`\\r\\n  font-size: 20px;\\r\\n  font-weight: bold;\\r\\n  padding-left: 20px;\\r\\n  padding-right: 20px;\\r\\n  display: flex;\\r\\n  justify-content: space-between;\\r\\n  margin-bottom: 10px;\\r\\n  height: 50px;\\r\\n  line-height: 50px;\\r\\n  color: #fff;\\r\\n  \\r\\n`;\\r\\n\\r\\n// Create styles for BoardColumnContent element\\r\\nconst BoardColumnContent = styled.div<BoardColumnContentStylesProps>`\\r\\n  margin: 5%;\\r\\n  border-radius: 4px;\\r\\n  min-height: 20px;\\r\\n`;\\r\\n\\r\\n// Create and export the BoardColumn component\\r\\nexport const BoardColumn: React.FC<BoardColumnProps> = (props) => {\\r\\n  const [open, setOpen] = React.useState(false);\\r\\n  const handleOpen = () => setOpen(true);\\r\\n  const handleClose = () => setOpen(false);\\r\\n  return (\\r\\n    <Draggable draggableId={props.column.id} index={props.index}>\\r\\n      {(provided1, snapshot1) => (\\r\\n        <BoardColumnWrapper\\r\\n          {...provided1.draggableProps}\\r\\n          {...provided1.dragHandleProps}\\r\\n          ref={provided1.innerRef}\\r\\n          isDragging={snapshot1.isDragging}\\r\\n        >\\r\\n          <BoardColumnTitle style={{ backgroundColor: props.bgColor }}>\\r\\n            {props.column.title}\\r\\n            <AddButton onClick={handleOpen}> + </AddButton>\\r\\n          </BoardColumnTitle>\\r\\n          <Modal open={open} onClose={handleClose}>\\r\\n            <AddTask title= {props.column.id} onkeyup={props.AddonKey} />\\r\\n          </Modal>\\r\\n          <Droppable\\r\\n            droppableId={props.column.id}\\r\\n            direction=\\\"vertical\\\"\\r\\n            isDropDisabled={props.droppable}\\r\\n          >\\r\\n            {(provided, snapshot) => (\\r\\n              <BoardColumnContent\\r\\n                {...provided.droppableProps}\\r\\n                ref={provided.innerRef}\\r\\n                isDraggingOver={snapshot.isDraggingOver}\\r\\n              >\\r\\n                {props.items.map((item: any, index: number) => (\\r\\n                  <BoardItem\\r\\n                    key={item.id}\\r\\n                    item={item}\\r\\n                    index={index}\\r\\n                    onkey={props.onkey}\\r\\n                  />\\r\\n                ))}\\r\\n                {provided.placeholder}\\r\\n              </BoardColumnContent>\\r\\n            )}\\r\\n          </Droppable>\\r\\n        </BoardColumnWrapper>\\r\\n      )}\\r\\n    </Draggable>\\r\\n  );\\r\\n};\\r\\n\",\"import * as React from \\\"react\\\";\\r\\nimport { DragDropContext, Droppable } from \\\"react-beautiful-dnd\\\";\\r\\nimport styled from \\\"styled-components\\\";\\r\\nimport { initialBoardData } from \\\"../data/board-initial-data\\\";\\r\\nimport { BoardColumn } from \\\"./board-column\\\";\\r\\n\\r\\n// set of color for column title\\r\\nconst bgColor = [\\\"#FB7D44\\\", \\\"#2A92BF\\\", \\\"#F4CE46\\\", \\\"#00B961\\\"];\\r\\n\\r\\n// Board Element\\r\\nconst BoardEl = styled.div`\\r\\n  display: flex;\\r\\n  align-items: flex-start;\\r\\n  justify-content: space-between;\\r\\n`;\\r\\n\\r\\nconst IntroWrapper = styled.div`\\r\\n  text-align: center;\\r\\n  color: #fff;\\r\\n  margin-top: 5%;\\r\\n  margin-bottom: 5%;\\r\\n`;\\r\\n\\r\\nexport class Board extends React.Component {\\r\\n  state = {\\r\\n    data: initialBoardData, // dataset\\r\\n    ColumnDroppable: false, // when dragging tasks, columns are not droppable\\r\\n    itemDroppable: false, // when dragging column, tasks are not droppable\\r\\n  };\\r\\n\\r\\n  // Handle edit content of tasks\\r\\n  editContent = (event: React.KeyboardEvent<HTMLInputElement>) => {\\r\\n    if (event.key === \\\"Enter\\\") {\\r\\n      // get edited item\\r\\n      let target = event.target as HTMLInputElement;\\r\\n      let itemId = target.id;\\r\\n      let itemContent = target.value;\\r\\n      // updated content of item\\r\\n      const newState = {\\r\\n        ...this.state.data,\\r\\n        items: {\\r\\n          ...this.state.data.items,\\r\\n          [itemId]: { id: itemId, content: itemContent },\\r\\n        },\\r\\n      };\\r\\n      this.setState({ data: newState });\\r\\n      // press enter, lose focus\\r\\n      (event.target as HTMLInputElement).blur();\\r\\n    }\\r\\n  };\\r\\n\\r\\n  // Handle adding new Tasks\\r\\n  addNewTask = (event: React.KeyboardEvent<HTMLInputElement>) => {\\r\\n    if (event.key === \\\"Enter\\\") {\\r\\n      const itemContent = (event.target as HTMLInputElement).value;\\r\\n      // Do nothing if no typing in textField\\r\\n      if (itemContent === \\\"\\\") return;\\r\\n      // auto generate item_id\\r\\n      let itemIndex = Object.keys(this.state.data.items).length + 1;\\r\\n      let itemId: string = \\\"item-\\\" + itemIndex;\\r\\n      // get column_id that needed to add task\\r\\n      let colName = document.getElementById(\\\"add-content\\\");\\r\\n      if (colName !== null && colName.innerHTML !== undefined) {\\r\\n        let columnId = colName.innerText;\\r\\n        // update column itemsIds list\\r\\n        const columnAdd = (this.state.data.columns as any)[columnId];\\r\\n        const newItemsIds = Array.from(columnAdd.itemsIds);\\r\\n        newItemsIds.push(itemId);\\r\\n        // update column\\r\\n        const newColumnAdd = {\\r\\n          ...columnAdd,\\r\\n          itemsIds: newItemsIds,\\r\\n        };\\r\\n        //update data\\r\\n        const newState = {\\r\\n          ...this.state.data,\\r\\n          items: {\\r\\n            ...this.state.data.items,\\r\\n            [itemId]: { id: itemId, content: itemContent },\\r\\n          },\\r\\n          columns: {\\r\\n            ...this.state.data.columns,\\r\\n            [columnId]: newColumnAdd,\\r\\n          },\\r\\n        };\\r\\n        this.setState({ data: newState });\\r\\n      }\\r\\n    }\\r\\n\\r\\n    // put the new added item into column-4 by default\\r\\n  };\\r\\n\\r\\n  // handgle dragging tasks and dragging columns\\r\\n  onDragStart = (result: any) => {\\r\\n    // get current dragging element id\\r\\n    const { draggableId } = result;\\r\\n    // when dragging tasks, disable column dragging\\r\\n    if (draggableId.includes(\\\"item\\\")) {\\r\\n      this.setState({ ColumnDroppable: true });\\r\\n      this.setState({ itemDroppable: false });\\r\\n    }\\r\\n    // when dragging columns, disable item dragging\\r\\n    if (draggableId.includes(\\\"column\\\")) {\\r\\n      this.setState({ itemDroppable: true });\\r\\n      this.setState({ ColumnDroppable: false });\\r\\n    }\\r\\n  };\\r\\n\\r\\n  // Handle drag & drop\\r\\n  onDragEnd = (result: any) => {\\r\\n    const { source, destination, draggableId } = result;\\r\\n    // Do nothing if tasks is dropped outside the list\\r\\n    if (!destination) return;\\r\\n    // check if columns dragging tasks - invalid\\r\\n    if (\\r\\n      source.droppableId === \\\"columns-dragging\\\" &&\\r\\n      destination.droppableId !== \\\"columns-dragging\\\"\\r\\n    )\\r\\n      return;\\r\\n    // check if tasks dragging columns - invalid\\r\\n    if (\\r\\n      source.droppableId !== \\\"columns-dragging\\\" &&\\r\\n      destination.droppableId === \\\"columns-dragging\\\"\\r\\n    )\\r\\n      return;\\r\\n\\r\\n    // handle drag & drop between columns\\r\\n    if (draggableId.includes(\\\"column\\\")) {\\r\\n      const newcolumnsOrder = this.state.data.columnsOrder;\\r\\n      // change columns order\\r\\n      let temp = newcolumnsOrder[source.index];\\r\\n      newcolumnsOrder[source.index] = newcolumnsOrder[destination.index];\\r\\n      newcolumnsOrder[destination.index] = temp;\\r\\n      // change bgColor order\\r\\n      let tmp = bgColor[source.index];\\r\\n      bgColor[source.index] = bgColor[destination.index];\\r\\n      bgColor[destination.index] = tmp;\\r\\n      // update data\\r\\n      const newState = {\\r\\n        ...this.state.data,\\r\\n        columnsOrder: newcolumnsOrder,\\r\\n      };\\r\\n      this.setState({ data: newState });\\r\\n    }\\r\\n\\r\\n    // handle drag & drop between tasks\\r\\n    if (draggableId.includes(\\\"item\\\")) {\\r\\n      // Do nothing if the item is dropped into the same place\\r\\n      if (\\r\\n        destination.droppableId === source.droppableId &&\\r\\n        destination.index === source.index\\r\\n      )\\r\\n        return;\\r\\n\\r\\n      // Find column from which the item was dragged from\\r\\n      const columnStart = (this.state.data.columns as any)[source.droppableId];\\r\\n\\r\\n      // Find column in which the item was dropped\\r\\n      const columnFinish = (this.state.data.columns as any)[\\r\\n        destination.droppableId\\r\\n      ];\\r\\n\\r\\n      // Moving items in the same list\\r\\n      if (columnStart === columnFinish) {\\r\\n        // Get all item ids in currently active list\\r\\n        const newItemsIds = Array.from(columnStart.itemsIds);\\r\\n\\r\\n        // Remove the id of dragged item from its original position\\r\\n        newItemsIds.splice(source.index, 1);\\r\\n\\r\\n        // Insert the id of dragged item to the new position\\r\\n        newItemsIds.splice(destination.index, 0, draggableId);\\r\\n\\r\\n        // Create new, updated, object with data for columns\\r\\n        const newColumnStart = {\\r\\n          ...columnStart,\\r\\n          itemsIds: newItemsIds,\\r\\n        };\\r\\n\\r\\n        // Create new board state with updated data for columns\\r\\n        const newState = {\\r\\n          ...this.state.data,\\r\\n          columns: {\\r\\n            ...this.state.data.columns,\\r\\n            [newColumnStart.id]: newColumnStart,\\r\\n          },\\r\\n        };\\r\\n\\r\\n        // Update the board state with new data\\r\\n        this.setState({ data: newState });\\r\\n      } else {\\r\\n        // Moving items from one list to another\\r\\n        // Get all item ids in source list\\r\\n        const newStartItemsIds = Array.from(columnStart.itemsIds);\\r\\n\\r\\n        // Remove the id of dragged item from its original position\\r\\n        newStartItemsIds.splice(source.index, 1);\\r\\n\\r\\n        // Create new, updated, object with data for source column\\r\\n        const newColumnStart = {\\r\\n          ...columnStart,\\r\\n          itemsIds: newStartItemsIds,\\r\\n        };\\r\\n\\r\\n        // Get all item ids in destination list\\r\\n        const newFinishItemsIds = Array.from(columnFinish.itemsIds);\\r\\n\\r\\n        // Insert the id of dragged item to the new position in destination list\\r\\n        newFinishItemsIds.splice(destination.index, 0, draggableId);\\r\\n\\r\\n        // Create new, updated, object with data for destination column\\r\\n        const newColumnFinish = {\\r\\n          ...columnFinish,\\r\\n          itemsIds: newFinishItemsIds,\\r\\n        };\\r\\n\\r\\n        // Create new board state with updated data for both, source and destination columns\\r\\n        const newState = {\\r\\n          ...this.state.data,\\r\\n          columns: {\\r\\n            ...this.state.data.columns,\\r\\n            [newColumnStart.id]: newColumnStart,\\r\\n            [newColumnFinish.id]: newColumnFinish,\\r\\n          },\\r\\n        };\\r\\n\\r\\n        // Update the board state with new data\\r\\n        this.setState({ data: newState });\\r\\n      }\\r\\n    }\\r\\n  };\\r\\n  render() {\\r\\n    return (\\r\\n      <div>\\r\\n        <IntroWrapper>\\r\\n          <h1> Welcome to Vicky's Coding Center </h1>\\r\\n          <h3> Completed at 19/09/2021 </h3>\\r\\n        </IntroWrapper>\\r\\n        <DragDropContext\\r\\n          onDragEnd={this.onDragEnd}\\r\\n          onDragStart={this.onDragStart}\\r\\n        >\\r\\n          <Droppable\\r\\n            droppableId=\\\"columns-dragging\\\"\\r\\n            direction=\\\"horizontal\\\"\\r\\n            isDropDisabled={this.state.ColumnDroppable}\\r\\n          >\\r\\n            {(provided) => (\\r\\n              <BoardEl {...provided.droppableProps} ref={provided.innerRef}>\\r\\n                {this.state.data.columnsOrder.map((columnId, index) => {\\r\\n                  // Get id of the current column\\r\\n                  const column = (this.state.data.columns as any)[columnId];\\r\\n\\r\\n                  // Get item belonging to the current column\\r\\n                  const items = column.itemsIds.map(\\r\\n                    (itemId: string) => (this.state.data.items as any)[itemId]\\r\\n                  );\\r\\n\\r\\n                  // Render the BoardColumn component\\r\\n                  return (\\r\\n                    <BoardColumn\\r\\n                      bgColor={bgColor[index]}\\r\\n                      index={index}\\r\\n                      key={column.id}\\r\\n                      column={column}\\r\\n                      items={items}\\r\\n                      onkey={this.editContent}\\r\\n                      AddonKey={this.addNewTask}\\r\\n                      droppable={this.state.itemDroppable}\\r\\n                    />\\r\\n                  );\\r\\n                })}\\r\\n                {provided.placeholder}\\r\\n              </BoardEl>\\r\\n            )}\\r\\n          </Droppable>\\r\\n        </DragDropContext>\\r\\n      </div>\\r\\n    );\\r\\n  }\\r\\n}\\r\\n\",\"import * as React from 'react'\\r\\nimport * as ReactDOM from 'react-dom'\\r\\nimport { createGlobalStyle } from 'styled-components'\\r\\nimport \\\"./index.css\\\";\\r\\n\\r\\n// Import main Board component\\r\\nimport { Board } from './components/board'\\r\\n\\r\\n// Use createGlobalStyle to change the background of 'body' element\\r\\nconst GlobalStyle = createGlobalStyle`\\r\\n  body {\\r\\n    background-color: #33363D;\\r\\n  }\\r\\n`\\r\\n\\r\\n// Create component for the page\\r\\nconst Page = () => (<>\\r\\n  <Board />\\r\\n  <GlobalStyle />\\r\\n</>)\\r\\n\\r\\n// Render the page into DOM\\r\\nReactDOM.render(<Page />, document.getElementById('root'))\\r\\n\\r\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{101:function(e,t,n){\"use strict\";n.r(t);var a,r,i,o,c=n(4),d=n(0),l=n.n(d),s=n(6),m=n(5),u=(n(62),n(9)),b=n(1),p=n(43),g=n(44),f=n(53),O=n(51),j=n(10),v={items:{\"item-1\":{id:\"item-1\",content:\"Content of item 1.\"},\"item-2\":{id:\"item-2\",content:\"Content of item 2.\"},\"item-3\":{id:\"item-3\",content:\"Content of item 3.\"},\"item-4\":{id:\"item-4\",content:\"Content of item 4.\"},\"item-5\":{id:\"item-5\",content:\"Content of item 5.\"},\"item-6\":{id:\"item-6\",content:\"Content of item 6.\"},\"item-7\":{id:\"item-7\",content:\"Content of item 7.\"}},columns:{\"column-1\":{id:\"column-1\",title:\"Column 1\",itemsIds:[\"item-1\",\"item-2\",\"item-3\",\"item-4\",\"item-5\",\"item-6\",\"item-7\"]},\"column-2\":{id:\"column-2\",title:\"Column 2\",itemsIds:[]},\"column-3\":{id:\"column-3\",title:\"Column 3\",itemsIds:[]},\"column-4\":{id:\"column-4\",title:\"Column 4\",itemsIds:[]}},columnsOrder:[\"column-1\",\"column-2\",\"column-3\",\"column-4\"]},x=n(15),h=n(106),E=m.b.div(a||(a=Object(c.a)([\"\\n  position: absolute;\\n  top: 40%;\\n  left: 40%;\\n  background-color: #fff;\\n  width: 20%;\\n\"]))),y=m.b.input(r||(r=Object(c.a)([\"\\n  height: 30px;\\n  fontsize: 16px;\\n\"])));function C(e){var t=Object(d.useState)(\"\"),n=Object(x.a)(t,2),a=n[0],r=n[1];return l.a.createElement(E,null,l.a.createElement(\"div\",{style:{margin:\"10%\"}},l.a.createElement(\"h2\",{id:\"add-content\"},\" \",e.title,\" \"),l.a.createElement(y,{id:\"add-content\",value:a,placeholder:\"Add Content Here\",onChange:function(e){r(e.target.value)},onKeyUp:e.onkeyup})))}var I,D,k,w,S,A,P,z=m.b.div(i||(i=Object(c.a)([\"\\n  padding: 8px;\\n  margin-top:10px;\\n  margin-bottom:15px;\\n  background-color:  \",\";r\\n  border-radius: 4px;\\n  transition: background-color 0.25s ease-out;\\n\\n  & + & {\\n    margin-top: 4px;\\n  }\\n\"])),function(e){return e.isDragging?\"rgba(0,0,0,0.8)\":\"rgba(0,0,0,0.4)\"}),B=m.b.input(o||(o=Object(c.a)([\"\\n  border:none;\\n  background-color:transparent;\\n  color: #fff;\\n  height:30px;\\n  font-size:14px;\\n  fontWeight:bold;\\n  width:50%;\\n\\n\"]))),F=function(e){var t=Object(d.useState)(e.item.content),n=Object(x.a)(t,2),a=n[0],r=n[1];return l.a.createElement(j.b,{draggableId:e.item.id,index:e.index},function(t,n){return l.a.createElement(z,Object.assign({},t.draggableProps,t.dragHandleProps,{ref:t.innerRef,isDragging:n.isDragging}),l.a.createElement(B,{id:e.item.id,value:a,onChange:function(e){r(e.target.value)},onKeyUp:e.onkey}))})},H=m.b.div(I||(I=Object(c.a)([\"\\n  flex: 1;\\n  background-color: rgba(0, 0, 0, 0.2);\\n  & + & {\\n    margin-left: 20px;\\n  }\\n\"]))),K=m.b.button(D||(D=Object(c.a)([\"\\n  outline:none;\\n  border: none;\\n  background-color: transparent;\\n  font-size: 30px;\\n  cursor: pointer;\\n  &:hover{\\n    border: null;\\n    color:white;\\n  }\\n\"]))),R=m.b.div(k||(k=Object(c.a)([\"\\n  font-size: 20px;\\n  font-weight: bold;\\n  padding-left: 20px;\\n  padding-right: 20px;\\n  display: flex;\\n  justify-content: space-between;\\n  margin-bottom: 10px;\\n  height: 50px;\\n  line-height: 50px;\\n  color: #fff;\\n  \\n\"]))),T=m.b.div(w||(w=Object(c.a)([\"\\n  margin: 5%;\\n  border-radius: 4px;\\n  min-height: 20px;\\n\"]))),J=function(e){var t=d.useState(!1),n=Object(x.a)(t,2),a=n[0],r=n[1],i=function(){return r(!0)},o=function(){return r(!1)};return d.createElement(j.b,{draggableId:e.column.id,index:e.index},function(t,n){return d.createElement(H,Object.assign({},t.draggableProps,t.dragHandleProps,{ref:t.innerRef,isDragging:n.isDragging}),d.createElement(R,{style:{backgroundColor:e.bgColor}},e.column.title,d.createElement(K,{onClick:i},\" + \")),d.createElement(h.a,{open:a,onClose:o},d.createElement(C,{title:e.column.id,onkeyup:e.AddonKey})),d.createElement(j.c,{droppableId:e.column.id,direction:\"vertical\",isDropDisabled:e.droppable},function(t,n){return d.createElement(T,Object.assign({},t.droppableProps,{ref:t.innerRef,isDraggingOver:n.isDraggingOver}),e.items.map(function(t,n){return d.createElement(F,{key:t.id,item:t,index:n,onkey:e.onkey})}),t.placeholder)}))})},N=[\"#FB7D44\",\"#2A92BF\",\"#F4CE46\",\"#00B961\"],U=m.b.div(S||(S=Object(c.a)([\"\\n  display: flex;\\n  align-items: flex-start;\\n  justify-content: space-between;\\n\"]))),W=m.b.div(A||(A=Object(c.a)([\"\\n  text-align: center;\\n  color: #fff;\\n  margin-top: 5%;\\n  margin-bottom: 5%;\\n\"]))),L=function(e){Object(f.a)(n,e);var t=Object(O.a)(n);function n(){var e;Object(p.a)(this,n);for(var a=arguments.length,r=new Array(a),i=0;i<a;i++)r[i]=arguments[i];return(e=t.call.apply(t,[this].concat(r))).state={data:v,ColumnDroppable:!1,itemDroppable:!1},e.editContent=function(t){if(\"Enter\"===t.key){var n=t.target,a=n.id,r=n.value,i=Object(b.a)(Object(b.a)({},e.state.data),{},{items:Object(b.a)(Object(b.a)({},e.state.data.items),{},Object(u.a)({},a,{id:a,content:r}))});e.setState({data:i}),t.target.blur()}},e.addNewTask=function(t){if(\"Enter\"===t.key){var n=t.target.value;if(\"\"===n)return;var a=\"item-\"+(Object.keys(e.state.data.items).length+1),r=document.getElementById(\"add-content\");if(null!==r&&void 0!==r.innerHTML){var i=r.innerText,o=e.state.data.columns[i],c=Array.from(o.itemsIds);c.push(a);var d=Object(b.a)(Object(b.a)({},o),{},{itemsIds:c}),l=Object(b.a)(Object(b.a)({},e.state.data),{},{items:Object(b.a)(Object(b.a)({},e.state.data.items),{},Object(u.a)({},a,{id:a,content:n})),columns:Object(b.a)(Object(b.a)({},e.state.data.columns),{},Object(u.a)({},i,d))});e.setState({data:l})}}},e.onDragStart=function(t){var n=t.draggableId;n.includes(\"item\")&&(e.setState({ColumnDroppable:!0}),e.setState({itemDroppable:!1})),n.includes(\"column\")&&(e.setState({itemDroppable:!0}),e.setState({ColumnDroppable:!1}))},e.onDragEnd=function(t){var n=t.source,a=t.destination,r=t.draggableId;if(a&&(\"columns-dragging\"!==n.droppableId||\"columns-dragging\"===a.droppableId)&&(\"columns-dragging\"===n.droppableId||\"columns-dragging\"!==a.droppableId)){if(r.includes(\"column\")){var i=e.state.data.columnsOrder,o=i[n.index];i[n.index]=i[a.index],i[a.index]=o;var c=N[n.index];N[n.index]=N[a.index],N[a.index]=c;var d=Object(b.a)(Object(b.a)({},e.state.data),{},{columnsOrder:i});e.setState({data:d})}if(r.includes(\"item\")){if(a.droppableId===n.droppableId&&a.index===n.index)return;var l=e.state.data.columns[n.droppableId],s=e.state.data.columns[a.droppableId];if(l===s){var m=Array.from(l.itemsIds);m.splice(n.index,1),m.splice(a.index,0,r);var p=Object(b.a)(Object(b.a)({},l),{},{itemsIds:m}),g=Object(b.a)(Object(b.a)({},e.state.data),{},{columns:Object(b.a)(Object(b.a)({},e.state.data.columns),{},Object(u.a)({},p.id,p))});e.setState({data:g})}else{var f,O=Array.from(l.itemsIds);O.splice(n.index,1);var j=Object(b.a)(Object(b.a)({},l),{},{itemsIds:O}),v=Array.from(s.itemsIds);v.splice(a.index,0,r);var x=Object(b.a)(Object(b.a)({},s),{},{itemsIds:v}),h=Object(b.a)(Object(b.a)({},e.state.data),{},{columns:Object(b.a)(Object(b.a)({},e.state.data.columns),{},(f={},Object(u.a)(f,j.id,j),Object(u.a)(f,x.id,x),f))});e.setState({data:h})}}}},e}return Object(g.a)(n,[{key:\"render\",value:function(){var e=this;return d.createElement(\"div\",null,d.createElement(W,null,d.createElement(\"h1\",null,\" Welcome to Vicky's Coding Center \"),d.createElement(\"h3\",null,\" Completed at 19/09/2021 \")),d.createElement(j.a,{onDragEnd:this.onDragEnd,onDragStart:this.onDragStart},d.createElement(j.c,{droppableId:\"columns-dragging\",direction:\"horizontal\",isDropDisabled:this.state.ColumnDroppable},function(t){return d.createElement(U,Object.assign({},t.droppableProps,{ref:t.innerRef}),e.state.data.columnsOrder.map(function(t,n){var a=e.state.data.columns[t],r=a.itemsIds.map(function(t){return e.state.data.items[t]});return d.createElement(J,{bgColor:N[n],index:n,key:a.id,column:a,items:r,onkey:e.editContent,AddonKey:e.addNewTask,droppable:e.state.itemDroppable})}),t.placeholder)})))}}]),n}(d.Component),M=Object(m.a)(P||(P=Object(c.a)([\"\\n  body {\\n    background-color: #33363D;\\n  }\\n\"]))),V=function(){return d.createElement(d.Fragment,null,d.createElement(L,null),d.createElement(M,null))};s.render(d.createElement(V,null),document.getElementById(\"root\"))},57:function(e,t,n){e.exports=n(101)},62:function(e,t,n){}},[[57,1,2]]]);","extractedComments":[]}